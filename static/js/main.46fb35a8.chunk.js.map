{"version":3,"sources":["serviceWorker.js","store/reducers/rootReducer.js","components/Cards.js","api/parserApi.js","keys.js","store/actions/BooksAction.js","components/LandingPage.js","components/SearchList.js","components/SearchPage.js","components/SinglePageCard.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","initialState","books","menu","value","search","author","likes","add","description","reducer","arguments","length","undefined","action","type","Object","objectSpread","data","newstate","newList","filter","item","best_book","title","toLowerCase","input","name","Cards","props","react_default","a","createElement","className","booksList","map","index","key","src","image_url","alt","react_router_dom","to","id","average_rating","parseXMLResponse","response","XMLResponse","DOMParser","parseFromString","getElementsByTagName","construct","Array","toConsumableArray","result","XMLToJson","XML","allNodes","children","jsonResult","forEach","node","nodeName","innerHTML","this","setState","fetchingData","FetchApiBooks","dispatch","requestUri","concat","Axios","get","res","GetDescription","replace","getDescription","BooksAction_this","toString","LandingPage","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","inherits","createClass","fetchBooks","aria-hidden","components_Cards","Component","connect","lists","SearchPage","_this","ismounted","clearInput","onChange","handleInput","components_SearchList","e","target","searchText","SinglePageCard","book","data-sal","data-sal-delay","data-sal-duration","data-sal-easing","class","dangerouslySetInnerHTML","__html","original_publication_day","original_publication_month","original_publication_year","href","ownProps","slug","params","item_slug","find","payload","App","react_router","path","exact","component","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.46fb35a8.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n  books: [],\n  menu: [],\n  value: \"\",\n  search: [],\n  author: [],\n  likes: [],\n  add: [],\n  description: \"\"\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_BOOKS\":\n      return {\n        ...state,\n        books: action.data\n      };\n    case \"FETCH_BOOKS_PARAM\":\n      const newstate = {\n        ...state,\n        books: action.data\n      };\n\n      let newList = newstate.books.filter(item => {\n        return (\n          item.best_book.title\n            .toLowerCase()\n            .search(action.input.toLowerCase()) !== -1 ||\n          item.best_book.author.name\n            .toLowerCase()\n            .search(action.input.toLowerCase()) !== -1\n        );\n      });\n\n      return {\n        ...newstate,\n        search: newList,\n        value: action.input\n      };\n    case \"GET_DESCRIPTION\":\n      return {\n        ...state,\n        description: action.data\n      };\n    case \"CLEAR_DESCRIPTION\":\n      return {\n        ...state,\n        description: \"Fetching description for this book...\"\n      };\n    case \"CLEAR_CHANGE\":\n      console.log(\"Clear\", action);\n\n      return {\n        ...state,\n        search: [],\n        value: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\nexport default reducer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Cards = props => {\n  return (\n    <div className=\"cards\">\n      {props.booksList.map((item, index) => {\n        return (\n          <div className=\"card\" key={index}>\n            <div className=\"overlay\">\n              <img src={item.best_book.image_url} alt=\"\" />\n              <div className=\"strip\">\n                <div className=\"like-menu\" />\n              </div>\n            </div>\n            <Link to={\"/\" + item.best_book.id}>\n              <h2>{item.best_book.title}</h2>\n            </Link>\n            <br />\n            <div>\n              <b>Author:</b> {item.best_book.author.name}\n            </div>\n            <div>\n              <b>Avg. Rating:</b> {item.average_rating}\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Cards;\n","// parse string xml received from goodreads api\r\nexport function parseXMLResponse(response) {\r\n  const parser = new DOMParser();\r\n  const XMLResponse = parser.parseFromString(response, \"application/xml\");\r\n  const parseError = XMLResponse.getElementsByTagName(\"parsererror\");\r\n\r\n  if (parseError.length) {\r\n    this.setState({\r\n      error: \"There was an error fetching results.\",\r\n      fetchingData: false\r\n    });\r\n  } else {\r\n    const XMLresults = new Array(...XMLResponse.getElementsByTagName(\"work\"));\r\n    const searchResults = XMLresults.map(result => XMLToJson(result));\r\n    return searchResults;\r\n  }\r\n}\r\n\r\nexport function getDescription(data) {\r\n  const parser = new DOMParser();\r\n  const XMLResponse = parser.parseFromString(data, \"application/xml\");\r\n\r\n  const parseError = XMLResponse.getElementsByTagName(\"parsererror\");\r\n  let description = \"\";\r\n  if (parseError.length) {\r\n    this.setState({\r\n      error: \"There was an error fetching results.\"\r\n    });\r\n  } else {\r\n    description = XMLResponse.getElementsByTagName(\"description\")[0].innerHTML;\r\n\r\n    description = description.replace(\"<![CDATA[\", \"\").replace(\"]]>\", \"\");\r\n\r\n    if (!description) {\r\n      description = \"No description found.\";\r\n    }\r\n  }\r\n\r\n  return description;\r\n}\r\n\r\n// Function to convert simple XML document into JSON.\r\n// Loops through each child and saves it as key, value pair\r\n// if there are sub-children, call the same function recursively on its children.\r\nexport function XMLToJson(XML) {\r\n  const allNodes = new Array(...XML.children);\r\n  const jsonResult = {};\r\n  allNodes.forEach(node => {\r\n    if (node.children.length) {\r\n      jsonResult[node.nodeName] = XMLToJson(node);\r\n    } else {\r\n      jsonResult[node.nodeName] = node.innerHTML;\r\n    }\r\n  });\r\n  return jsonResult;\r\n}\r\n","export const REACT_APP_API_KEY = \"kHZsEVYjvn6Hh865MHrrag\";\r\n","import Axios from \"axios\";\nimport { parseXMLResponse, getDescription } from \"../../api/parserApi\";\nimport { REACT_APP_API_KEY } from \"../../keys\";\n\nexport const FetchApiBooks = () => {\n  return function(dispatch) {\n    const searchText = \"programming languages\";\n\n    const requestUri =\n      `https://cors-anywhere.herokuapp.com/` +\n      `https://www.goodreads.com/search/index.xml?key=${REACT_APP_API_KEY}&q=${searchText}`;\n\n    return Axios.get(requestUri)\n      .then(res => res.data)\n      .then(data =>\n        dispatch({ type: \"FETCH_BOOKS\", data: parseXMLResponse(data) })\n      );\n  };\n};\n\nexport const FetchApiBooksbyFilter = input => {\n  return function(dispatch) {\n    console.log(input);\n\n    let searchText = \"\";\n\n    if (input !== undefined && input.length > 0) searchText = input;\n\n    const requestUri =\n      `https://cors-anywhere.herokuapp.com/` +\n      `https://www.goodreads.com/search/index.xml?key=${REACT_APP_API_KEY}&q=${searchText}`;\n\n    return Axios.get(requestUri)\n      .then(res => res.data)\n      .then(data =>\n        dispatch({\n          type: \"FETCH_BOOKS_PARAM\",\n          data: parseXMLResponse(data),\n          input: input\n        })\n      );\n  };\n};\n\nexport const GetDescription = id => {\n  return dispatch => {\n    const bookId = id;\n    const requestUri =\n      `https://cors-anywhere.herokuapp.com/` +\n      `https://www.goodreads.com/book/show/${bookId}?key=${REACT_APP_API_KEY}`;\n\n    return Axios.get(requestUri)\n      .then(res => res.data)\n      .then(data =>\n        dispatch({ type: \"GET_DESCRIPTION\", data: getDescription(data) })\n      )\n      .catch(error => {\n        this.setState({\n          error: error.toString()\n        });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport Cards from \"./Cards\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { FetchApiBooks } from \"../store/actions/BooksAction\";\n\nexport class LandingPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n  render() {\n    return (\n      <div className=\"main-wrap\">\n        <div className=\"container\">\n          <Link to=\"/search\">\n            <i className=\"fa fa-search fa-2x top-bar\" aria-hidden=\"true\" />\n          </Link>\n          <h1>Good Reads Library</h1>\n        </div>\n        <h2 className=\"cards-title\">Favourite</h2>\n\n        <Cards booksList={this.props.booksList} />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state = []) {\n  return {\n    booksList: state.books\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchBooks: () => {\n      dispatch(FetchApiBooks());\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LandingPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nfunction SearchList(props) {\n  return (\n    <div className=\"search-list\">\n      {props.value &&\n        props.lists.map((item, index) => {\n          return (\n            <Link className=\"item\" key={index} to={\"/\" + item.best_book.id}>\n              <div className=\"item-title\">{item.best_book.title}</div>\n              <div className=\"item-author\">{item.best_book.author.name}</div>\n            </Link>\n          );\n        })}\n    </div>\n  );\n}\nconst mapStateToProps = state => {\n  console.log(state.value);\n  return {\n    lists: state.search,\n    value: state.value\n  };\n};\n\nexport default connect(mapStateToProps)(SearchList);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SearchList from \"./SearchList\";\nimport { connect } from \"react-redux\";\nimport {\n  FetchApiBooks,\n  FetchApiBooksbyFilter\n} from \"../store/actions/BooksAction\";\n\nclass SearchPage extends Component {\n  constructor(props) {\n    super(props);\n    this.ismounted = false;\n  }\n\n  componentDidMount() {\n    this.props.clearInput();\n  }\n\n  render() {\n    return (\n      <div className=\"search\">\n        <Link to=\"/\">\n          <i className=\"fa fa-times fa-2x top-bar\" aria-hidden=\"true\" />\n        </Link>\n        <div>\n          <input\n            type=\"text\"\n            className=\"input\"\n            value={this.props.input}\n            onChange={this.props.handleInput}\n          />\n        </div>\n        <SearchList />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  if (this.ismounted) {\n    this.ismounted = false;\n    return {\n      input: \"\"\n    };\n  }\n\n  return {\n    input: state.input\n  };\n}\nconst mapDispatchToProps = (dispatch, props) => {\n  return {\n    fetchBooks: () => {\n      console.log(props.input);\n      dispatch(FetchApiBooks(props.input));\n    },\n    handleInput: e => {\n      if (e.target.value !== undefined && e.target.value.length > 0)\n        dispatch(FetchApiBooksbyFilter(e.target.value));\n    },\n    clearInput: e => {\n      dispatch({ type: \"CLEAR_CHANGE\", input: \"\" });\n    }\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Link } from \"react-router-dom\";\nimport { GetDescription } from \"../store/actions/BooksAction\";\nexport class SinglePageCard extends Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    this.props.getDescription();\n  }\n  render() {\n    return this.props.book ? (\n      <div\n        className=\"div\"\n        data-sal=\"zoom-out\"\n        data-sal-delay=\"500\"\n        data-sal-duration=\"1200\"\n        data-sal-easing=\"ease-out-bounce\"\n      >\n        <Link to=\"/search\">\n          <i className=\"fa fa-search fa-2x top-bar\" aria-hidden=\"true\" />\n        </Link>\n        <div className=\"single-card\">\n          <div className=\"book\">\n            {<img src={this.props.book.best_book.image_url} alt=\"\" />}\n            <div class=\"rating\">\n              <b>Avg. Rating:</b> {this.props.book.average_rating}\n            </div>\n          </div>\n\n          <div className=\"book-text\">\n            <h1> {this.props.book.best_book.title}</h1>\n\n            <div className=\"col-lg-10 col-sm-8 innercontainer\">\n              {\n                <p\n                  dangerouslySetInnerHTML={{ __html: this.props.description }}\n                />\n              }\n            </div>\n\n            <div>\n              <p>\n                Published Date:{\" \"}\n                {`${this.props.book.original_publication_day}/${\n                  this.props.book.original_publication_month\n                }/${this.props.book.original_publication_year}`}\n                .{\" \"}\n                <a\n                  href={`https://www.goodreads.com/book/show/${\n                    this.props.book.best_book.id\n                  }`}\n                >\n                  Learn More\n                </a>\n              </p>\n            </div>\n\n            <Link to=\"/\" className=\"btn-back\">\n              Go back\n            </Link>\n          </div>\n        </div>\n      </div>\n    ) : (\n      <i className=\"fa fa-spinner fa-pulse fa-3x fa-fw\" />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  let slug = ownProps.match.params.item_slug;\n  return {\n    book: state.books.find(item => item.best_book.id === slug),\n    description: state.description\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  let slug = ownProps.match.params.item_slug;\n  return {\n    getDescription: () => {\n      dispatch({ type: \"CLEAR_DESCRIPTION\", payload: \"\" });\n      dispatch(GetDescription(slug));\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SinglePageCard);\n","import React, { Component } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage\";\nimport SearchPage from \"./components/SearchPage\";\nimport SinglePageCard from \"./components/SinglePageCard\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <HashRouter>\n          <Switch>\n            <Route path=\"/\" exact component={LandingPage} />\n            <Route path=\"/search\" exact component={SearchPage} />\n            <Route path=\"/:item_slug\" exact component={SinglePageCard} />\n          </Switch>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\n\nimport reducer from \"./store/reducers/rootReducer\";\nimport \"./css/index.css\";\nimport App from \"./App\";\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}